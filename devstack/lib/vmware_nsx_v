#!/bin/bash

# Copyright 2015 VMware, Inc.
#
# All Rights Reserved
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.


# Neutron VMware NSXv plugin
# --------------------------

# Save trace setting
NSXV_XTRACE=$(set +o | grep xtrace)
set +o xtrace

dir=${GITDIR['vmware-nsx']}/devstack
source $dir/lib/nsx_common

function setup_integration_bridge {
    :
}

function is_neutron_ovs_base_plugin {
    # NSXv does not use OVS
    return 1
}

function neutron_plugin_create_nova_conf {
    if [[ -n $NSXV_NOVA_METADATA_IPS ]]; then
        iniset $NOVA_CONF neutron service_metadata_proxy "True"
        iniset $NOVA_CONF neutron metadata_proxy_shared_secret "$NSXV_METADATA_SHARED_SECRET"
    fi
}

function neutron_plugin_install_agent_packages {
    # NSXv does not require this
    :
}

function neutron_plugin_configure_common {
    Q_PLUGIN_CONF_PATH=etc/neutron/plugins/vmware
    Q_PLUGIN_CONF_FILENAME=nsx.ini
    Q_PLUGIN_SRC_CONF_PATH=vmware-nsx/etc
    VMWARE_NSX_DIR=vmware-nsx
    # Uses oslo config generator to generate sample configuration file
    (cd $DEST/$VMWARE_NSX_DIR && exec ./tools/generate_config_file_samples.sh)
    mkdir -p /$Q_PLUGIN_CONF_PATH
    cp $DEST/$Q_PLUGIN_SRC_CONF_PATH/nsx.ini.sample /$Q_PLUGIN_CONF_PATH/$Q_PLUGIN_CONF_FILENAME
    sudo install -d -o $STACK_USER $NEUTRON_CONF_DIR/policy.d
    cp -vr $DEST/$Q_PLUGIN_SRC_CONF_PATH/policy.d/* $NEUTRON_CONF_DIR/policy.d/
    Q_PLUGIN_CLASS="vmware_nsxv"
}

function neutron_plugin_configure_debug_command {
    :
}

function neutron_plugin_configure_dhcp_agent {
    # VMware NSXv plugin does not run L3 agent
    die $LINENO "q-dhcp should not be executed with VMware NSXv plugin!"
}

function neutron_plugin_configure_l3_agent {
    # VMware NSXv plugin does not run L3 agent
    die $LINENO "q-l3 should not be executed with VMware NSXv plugin!"
}

function neutron_plugin_configure_plugin_agent {
    # VMware NSXv plugin does not run L2 agent
    die $LINENO "q-agt must not be executed with VMware NSXv plugin!"
}

function neutron_plugin_configure_service {
    nsxv_configure_service
    iniset /$Q_PLUGIN_CONF_FILE DEFAULT nsx_extension_drivers vmware_nsxv_dns
    if [[ "$NSXV_USE_DVS_FEATURES" != "" ]]; then
        dvs_configure_service "$VMWAREAPI_IP" "$VMWAREAPI_USER" "$VMWAREAPI_PASSWORD" "$VMWAREAPI_CA_FILE" "$VMWAREAPI_INSECURE" "$VMWARE_DVS_NAME"
    fi
}

function neutron_plugin_setup_interface_driver {
    :
}

function neutron_plugin_check_adv_test_requirements {
    return 0
}

# Restore xtrace
$NSXV_XTRACE
